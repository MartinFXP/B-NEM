% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.r
\name{findResiduals}
\alias{findResiduals}
\title{compute residuals}
\usage{
findResiduals(bString, CNOlist, model, fc = NULL, exprs = NULL,
  egenes = NULL, NEMlist = NULL, parameters = list(cutOffs = c(0, 1,
  0), scoring = c(0.1, 0.2, 0.9)), method = "s", sizeFac = 10^-10,
  main = "residuals for decoupled vertices",
  sub = paste0("green residuals are added effects (left positive,",
  " right negative) and red residuals are deleted ", "effects"),
  cut = TRUE, approach = "fc", parallel = NULL, verbose = TRUE,
  ...)
}
\arguments{
\item{bString}{Binary vector denoting the network given a model}

\item{CNOlist}{CNOlist object}

\item{model}{Network model object.}

\item{fc}{ORS of the data.}

\item{exprs}{Optional activation scheme of the data.}

\item{egenes}{Atachment of the E-genes (optional).}

\item{NEMlist}{NEMlist object (optional).}

\item{parameters}{not used}

\item{method}{Scoring method (optional).}

\item{sizeFac}{Zeta parameter to penelize netowkr size.}

\item{main}{Main title of the figure.}

\item{sub}{Subtitle of the figure.}

\item{cut}{If TRUE does not visualize experiments/S-genes which do
not have any residuals.}

\item{approach}{not used}

\item{parallel}{et number of cores/threads.}

\item{verbose}{verbose output}

\item{...}{additional parameters}
}
\value{
matrices indicating experiments and/or genes, where the
network and the data disagree
}
\description{
calculates residuals (data and optimized network do not match) and
visualizes them
}
\examples{
library(CellNOptR)
sifMatrix <- rbind(c("A", 1, "B"), c("A", 1, "C"), c("B", 1, "D"),
c("C", 1, "D"))
write.table(sifMatrix, file = "temp.sif", sep = "\\t", row.names = FALSE,
col.names = FALSE,
quote = FALSE)
PKN <- CellNOptR::readSIF("temp.sif")
unlink('temp.sif')
CNOlist <- dummyCNOlist("A", c("B","C","D"), maxStim = 1, maxInhibit = 2,
signal = c("A", "B","C","D"))
model <- CellNOptR::preprocessing(CNOlist, PKN, maxInputsPerGate = 100)
exprs <- matrix(rnorm(nrow(slot(CNOlist, "cues"))*10), 10,
nrow(slot(CNOlist, "cues")))
fc <- computeFc(CNOlist, exprs)
initBstring <- rep(0, length(model$reacID))
res <- bnem(search = "greedy", CNOlist = CNOlist, fc = fc, model = model,
parallel = NULL, initBstring = initBstring, draw = FALSE, verbose = FALSE,
maxSteps = Inf)
rownames(fc) <- seq_len(nrow(fc))
## val <- validateGraph(CNOlist = CNOlist, fc = fc, model = model,
## bString = res$bString, Egenes = 10, Sgene = 4)
residuals <- findResiduals(res$bString, CNOlist, model, fc = fc)
}
\author{
Martin Pirkl
}
