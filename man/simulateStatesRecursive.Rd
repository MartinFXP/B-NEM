% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulateStatesRecursive.R
\name{simulateStatesRecursive}
\alias{simulateStatesRecursive}
\title{simulates the activation pattern (truth table) of a hyper-graph and annotated perturbation experiments}
\usage{
simulateStatesRecursive(CNOlist, model, bString, NEMlist = NULL)
}
\arguments{
\item{CNOlist, }{CNOlist object}

\item{model}{model object}

\item{bString}{binary vector denoting the sub-graph given model}

\item{NEMlist}{NEMlist object only for devel}
}
\value{
return the truth tables for certain perturbation experiments
}
\description{
simulates the activation pattern (truth table) of a hyper-graph and annotated perturbation experiments
}
\examples{
library(bnem)
sifMatrix <- rbind(c("A", 1, "B"), c("A", 1, "C"), c("B", 1, "D"), c("C", 1, "D"))
write.table(sifMatrix, file = "temp.sif", sep = "\\t", row.names = FALSE, col.names = FALSE,
quote = FALSE)
PKN <- readSIF("temp.sif")
unlink('temp.sif')
CNOlist <- dummyCNOlist("A", c("B","C","D"), maxStim = 1, maxInhibit = 2, signal = c("A", "B","C","D"))
model <- preprocessing(CNOlist, PKN, maxInputsPerGate = 100)
states <- simulateStatesRecursive(CNOlist, model, rep(1, length(model$reacID)))
}
\author{
Martin Pirkl
}

